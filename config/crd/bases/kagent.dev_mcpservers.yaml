---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: mcpservers.kagent.dev
spec:
  group: kagent.dev
  names:
    categories:
    - kagent
    kind: MCPServer
    listKind: MCPServerList
    plural: mcpservers
    singular: mcpserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MCPServer is the Schema for the mcpservers API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MCPServerSpec defines the desired state of MCPServer.
            properties:
              authn:
                description: |-
                  Authn defines the authentication configuration for the MCP server.
                  This field is optional and can be used to configure JWT authentication.
                  If not specified, the MCP server will not require authentication.
                properties:
                  jwt:
                    description: JWT defines the JWT authentication configuration.
                    properties:
                      audiences:
                        description: Audiences is a list of audiences that the JWT
                          must match.
                        items:
                          type: string
                        type: array
                      issuer:
                        description: Issuer is the JWT issuer URL.
                        type: string
                      jwks:
                        description: |-
                          JWKS references a secret containing the JSON Web Key Set.
                          The secret must contain a key with the JWKS content.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                type: object
              authz:
                description: |-
                  Authz defines the authorization rule configuration for the MCP server.
                  This field is optional and can be used to configure authorization rules
                  for access to the MCP server and specific tools. If not specified, the MCP server will not enforce
                  any authorization rules.
                properties:
                  rules:
                    description: Rules defines the CEL-based authorization rules that
                      control access to the MCP server resources.
                    items:
                      type: string
                    type: array
                  server:
                    description: |-
                      Server defines the configuration for the MCP authorization server that protects the MCP server.
                      Setting this field will configure agentgateway to use the authorization server
                      to protect the MCP server and its resources as well as adapt traffic to the MCP client to comply with the
                      MCP authorization spec before forwarding traffic to the MCP client.
                    properties:
                      audience:
                        type: string
                      issuer:
                        type: string
                      jwksUrl:
                        type: string
                      provider:
                        description: MCPClientProvider represents the support identity
                          providers currently only keycloak is supported
                        properties:
                          keycloak:
                            properties:
                              realm:
                                type: string
                            required:
                            - realm
                            type: object
                        type: object
                      resourceMetadata:
                        description: MCPClientResourceMetadata represents resource
                          metadata for MCP client authentication
                        properties:
                          additionalFields:
                            additionalProperties:
                              type: string
                            description: Additional resource metadata fields
                            type: object
                          baseUrl:
                            description: 'BaseURL denotes the protected base url of
                              the protected resource ie: http://localhost:3000'
                            type: string
                          bearerMethodsSupported:
                            description: Bearer methods supported by this resource
                            items:
                              type: string
                            type: array
                          scopesSupported:
                            description: Scopes supported by this resource
                            items:
                              type: string
                            type: array
                        required:
                        - baseUrl
                        type: object
                    required:
                    - audience
                    - issuer
                    - jwksUrl
                    - resourceMetadata
                    type: object
                type: object
              deployment:
                description: Configuration to Deploy the MCP Server using a docker
                  container
                properties:
                  args:
                    description: Args defines the arguments to pass to the command.
                    items:
                      type: string
                    type: array
                  cmd:
                    description: Cmd defines the command to run in the container to
                      start the mcp server.
                    type: string
                  env:
                    additionalProperties:
                      type: string
                    description: Env defines the environment variables to set in the
                      container.
                    type: object
                  image:
                    description: Image defines the container image to to deploy the
                      MCP server.
                    type: string
                  port:
                    description: Port defines the port on which the MCP server will
                      listen.
                    type: integer
                  secretRefs:
                    description: |-
                      SecretRefs defines the list of Kubernetes secrets to reference.
                      These secrets will be mounted as volumes to the MCP server container.
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                type: object
              httpTransport:
                description: HTTPTransport defines the configuration for a Streamable
                  HTTP transport.
                properties:
                  path:
                    description: the target path where MCP is served
                    type: string
                  targetPort:
                    description: target port is the HTTP port that serves the MCP
                      server.over HTTP
                    format: int32
                    type: integer
                type: object
              stdioTransport:
                description: StdioTransport defines the configuration for a standard
                  input/output transport.
                type: object
              transportType:
                description: TransportType defines the type of mcp server being run
                enum:
                - stdio
                - http
                type: string
            required:
            - deployment
            type: object
          status:
            description: MCPServerStatus defines the observed state of MCPServer.
            properties:
              conditions:
                description: |-
                  Conditions describe the current conditions of the MCPServer.
                  Implementations should prefer to express MCPServer conditions
                  using the `MCPServerConditionType` and `MCPServerConditionReason`
                  constants so that operators and tools can converge on a common
                  vocabulary to describe MCPServer state.

                  Known condition types are:

                  * "Accepted"
                  * "ResolvedRefs"
                  * "Programmed"
                  * "Ready"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the most recent generation observed for this MCPServer.
                  It corresponds to the MCPServer's generation, which is updated on mutation by the API Server.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
