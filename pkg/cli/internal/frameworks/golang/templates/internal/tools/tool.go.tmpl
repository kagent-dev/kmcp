package tools

import (
	"context"
	"github.com/modelcontextprotocol/go-sdk/mcp"
)

func init() {
	registerTool(MCPTool[{{.ClassName}}Params, {{.ClassName}}Result]{
		Name:        "{{.ToolName}}",
		Description: "{{.Description}}",
		Handler: func(ctx context.Context, cc *mcp.ServerSession, params *mcp.CallToolParamsFor[{{.ClassName}}Params]) (*mcp.CallToolResultFor[{{.ClassName}}Result], error) {
			result := run{{.ClassName}}(params.Arguments)
			return &mcp.CallToolResultFor[{{.ClassName}}Result]{
				Content: []mcp.Content{
					&mcp.TextContent{
						Text: result.Result,
					},
				},
			}, nil
		},
	})
}

// define your input/output schemas here
type {{.ClassName}}Params struct {
	Message string `json:"message" description:"The message to input to call {{.ClassName}}."`
}

type {{.ClassName}}Result struct {
	Result string `json:"result" description:"The result of calling {{.ClassName}}."`
}

// your logic goes here
func run{{.ClassName}}(args {{.ClassName}}Params) {{.ClassName}}Result {
	// Implement your logic here
	return {{.ClassName}}Result{
		Result: "{{.ClassName}}: " + args.Message,
	}
}
