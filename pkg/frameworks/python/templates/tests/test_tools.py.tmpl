"""Generated tests for {{.ProjectName}} MCP server tools.

This file is automatically generated to test that all tools can be loaded
and executed successfully.
"""

import sys
from pathlib import Path

import pytest

# Add src to Python path
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

from core.server import DynamicMCPServer  # noqa: E402


class TestToolLoading:
    """Test that all tools can be loaded successfully."""

    def test_server_initialization(self):
        """Test that the server can be initialized."""
        server = DynamicMCPServer(name="Test Server", tools_dir="src/tools")
        assert server is not None
        assert server.name == "Test Server"

    def test_tool_discovery(self):
        """Test that tools can be discovered."""
        server = DynamicMCPServer(name="Test Server", tools_dir="src/tools")

        # Load tools without failing
        try:
            server.load_tools()
            assert True  # If we get here, loading succeeded
        except SystemExit:
            pytest.fail("Tool loading failed - server exited")

    def test_loaded_tools_count(self):
        """Test that expected tools are loaded."""
        server = DynamicMCPServer(name="Test Server", tools_dir="src/tools")
        server.load_tools()

        # At minimum, we should have the echo tool
        assert len(server.loaded_tools) >= 1
        assert "echo" in server.loaded_tools

    def test_tool_functions_callable(self):
        """Test that loaded tool functions are callable."""
        server = DynamicMCPServer(name="Test Server", tools_dir="src/tools")
        server.load_tools()

        for tool_name, tool in server.mcp.tools.items():
            assert callable(tool.fn), f"Tool {tool_name} is not callable"


class TestEchoTool:
    """Test the example echo tool."""

    def test_echo_tool_exists(self):
        """Test that the echo tool exists and can be loaded."""
        server = DynamicMCPServer(name="Test Server", tools_dir="src/tools")
        server.load_tools()

        assert "echo" in server.loaded_tools

    def test_echo_tool_function(self):
        """Test that the echo tool function works."""
        # Import the echo function directly
        from tools.echo import echo

        result = echo("Hello, World!")
        assert isinstance(result, str)
        assert "Hello, World!" in result
